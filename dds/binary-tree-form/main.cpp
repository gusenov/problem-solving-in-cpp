// Программа формирования и вывода бинарного дерева на экран:

#include <iostream>
#include <ctime>
#include <windows.h>
#include "BinaryTree.h"

using namespace std;

// Переход на кириллицу:
void cyrillic() {
	// Эти строки нужны для правильного отображения кириллицы:
	SetConsoleOutputCP(1251);
	SetConsoleCP(1251);
	
	// Также надо изменить шрифт в консоли на Lucida Console.
	// Для замены шрифта кликаете правой кнопкой на надписи «Командная строка» окна консоли. 
	// В открывшемся меню выбираете «Свойства». 
	// В появившемся окне выбираете вкладку «Шрифт» и там выбираете «Lucida Console». 
}

int main(int argc, char** argv) {
	cyrillic();
	
	// Автоматическая рандомизация генератора случайных чисел 
	// (чтобы всегда получать разные случайные числа):
	srand(time(0));
	
	cout << "Введите длину последовательности чисел>";
	int n;
	cin >> n;
	
	BinaryTree* bt = new BinaryTree();
	
	cout << "Дана последовательность чисел:\n";
	
	int* arr = new int[n];
	for (int i = 0; i < n; ++i) {
		// Генерация случайного целого числа в диапазоне [1; 100]:
		arr[i] = (rand() % 100) + 1;
		
		// Функция rand() генерирует псевдослучайное число в диапазоне от 0 до RAND_MAX.
		// RAND_MAX = 0x7fff = 32767 = (2^15) - 1.
		
		cout << arr[i] << " ";
		
		// Формирование бинарного дерева:
		bt->insert(arr[i]);
	}
	cout << endl;
	
	// Вывод бинарного дерева на экран:
	bt->print();
	
	// Для построенного дерева вывести на экран только элементы, являющиеся листьями:
	bt->printLeafs();

	// После выполнения программы очистить память, занятую древовидной структурой:
	delete bt;

	system("pause");
	return 0;
}

